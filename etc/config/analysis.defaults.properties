compilers=&llvm-mca:&osaca
compilerType=analysis
supportsBinary=false
objdumper=
# TODO: We might want to set a demangler, to deal with pasted compiler output with mangled symbols
demangler=
defaultCompiler=osacatrunkdef

group.llvm-mca.compilers=llvm-mcatrunkdef
group.llvm-mca.groupName=LLVM Machine Code Analyzer
group.llvm-mca.supportsBinary=false
group.llvm-mca.demangler=/opt/compiler-explorer/gcc-8.1.0/bin/c++filt
group.llvm-mca.compilerType=llvm-mca

compiler.llvm-mcatrunkdef.name=llvm-mca (trunk)
compiler.llvm-mcatrunkdef.exe=/usr/bin/llvm-mca
compiler.llvm-mcatrunkdef.alias=mcatrunk
# Sets both input and output to Intel variant
compiler.llvm-mcatrunk.intelAsm=--x86-asm-syntax=intel -output-asm-variant=1

group.osaca.compilers=osacatrunkdef
group.osaca.groupName=Open Source Architecture Code Analyzer
group.osaca.supportsBinary=false
group.osaca.demangler=/usr/bin/c++filt
group.osaca.compilerType=osaca

compiler.osacatrunkdef.name=OSACA (trunk)
compiler.osacatrunkdef.exe=/usr/bin/osaca
compiler.osacatrunkdef.alias=osacatrunk
# Intel syntax currently unsupported (WIP)
# compiler.osacatrunk.intelAsm=--intel-syntax
