import type {AssemblyInstructionInfo} from '../../../types/assembly-docs.interfaces.js';

    export function getAsmOpcode(opcode: string | undefined): AssemblyInstructionInfo | undefined {
        if (!opcode) return;
        switch (opcode) {
            case "a":
            return {
                "html": "<p>PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\nspace the parameter points, and for optionally specifying the alignment of the memory to which the\nparameter points.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2\" target=\"_blank\" rel=\"noopener noreferrer\">a <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\n\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\n\nspac...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2"
            };

        case "abs":
            return {
                "html": "<p>PTX ISA version 6.5 introduces the following new features:</p>\n<p>Take absolute value of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and store the result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\n<p>Take the absolute value of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and store the result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5\" target=\"_blank\" rel=\"noopener noreferrer\">abs <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-abs\" target=\"_blank\" rel=\"noopener noreferrer\">abs.bf16(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-abs\" target=\"_blank\" rel=\"noopener noreferrer\">abs.bf16x2(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-abs\" target=\"_blank\" rel=\"noopener noreferrer\">abs.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-abs\" target=\"_blank\" rel=\"noopener noreferrer\">abs.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-abs\" target=\"_blank\" rel=\"noopener noreferrer\">abs.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Absolute value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5"
            };

        case "acquire":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">acquire <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "activemask":
            return {
                "html": "<p>PTX ISA version 6.2 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-2\" target=\"_blank\" rel=\"noopener noreferrer\">activemask <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.2 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-2"
            };

        case "acube":
            return {
                "html": "<p>PTX ISA version 4.3 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3\" target=\"_blank\" rel=\"noopener noreferrer\">acube <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 4.3 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3"
            };

        case "add":
            return {
                "html": "<p>Performs addition and writes the resulting value into a destination register.</p>\n<p>Performs integer addition and writes the carry-out value into the condition code register.</p>\n<p>Converts input operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> from <code class=\"docutils literal notranslate\"><span class=\"pre\">.atype</span></code> into <code class=\"docutils literal notranslate\"><span class=\"pre\">.f32</span></code> type. The converted value is then\nused for the addition. The resulting value is stored in the destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#extended-precision-arithmetic-instructions-add-cc\" target=\"_blank\" rel=\"noopener noreferrer\">add.cc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.ftz.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.s16x2(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#mixed-precision-floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.sat <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.sat.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-add\" target=\"_blank\" rel=\"noopener noreferrer\">add.u16x2(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Add two values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-add"
            };

        case "addc":
            return {
                "html": "<p>Multiplies two values, extracts either the high or low part of the result, and adds a third value\nalong with carry-in. Writes the result to the destination register and optionally writes the\ncarry-out from the addition into the condition code register.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#extended-precision-arithmetic-instructions-madc\" target=\"_blank\" rel=\"noopener noreferrer\">addc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "32-bitmadcintroduced in PTX ISA version 3.0.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#extended-precision-arithmetic-instructions-madc"
            };

        case "addr":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code> instruction requests atomically cancelling the launch of\na cluster that has not started running yet. It asynchronously writes an opaque response to shared\nmemory indicating whether the operation succeeded or failed. The completion of the asynchronous\noperation is tracked using the mbarrier completion mechanism at <code class=\"docutils literal notranslate\"><span class=\"pre\">.cluster</span></code> scope.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-try-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">addr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Requests cancellation of cluster which is not launched yet.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-try-cancel"
            };

        case "alloca":
            return {
                "html": "<p>PTX ISA version 7.3 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-3\" target=\"_blank\" rel=\"noopener noreferrer\">alloca <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.3 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-3"
            };

        case "applypriority":
            return {
                "html": "<p>PTX ISA version 7.4 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4\" target=\"_blank\" rel=\"noopener noreferrer\">applypriority <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.4 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4"
            };

        case "asel":
            return {
                "html": "<p>Four-way SIMD parallel comparison with secondary operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4\" target=\"_blank\" rel=\"noopener noreferrer\">asel <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer quad byte SIMD comparison.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4"
            };

        case "atom":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Atomically loads the original value at location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> into destination register <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>, performs a\nreduction operation with operand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> and the value in location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, and stores the result of the\nspecified operation at location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, overwriting the original value. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> specifies a\nlocation in the specified state space. If no state space is given, perform the memory accesses using\n<a class=\"reference internal\" href=\"#generic-addressing\"><span class=\"std std-ref\">Generic Addressing</span></a>. <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> with scalar type may be used only\nwith <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> spaces and with generic addressing, where the address points to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> space. <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> with vector type may be used only with <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> space\nand with generic addressing where the address points to <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> space.</p>\n<p>Performs a reduction operation with operand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> and the value in location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, and stores the\nresult of the specified operation at location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, overwriting the original value. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>\nspecifies a location in the specified state space. If no state space is given, perform the memory\naccesses using <a class=\"reference internal\" href=\"#generic-addressing\"><span class=\"std std-ref\">Generic Addressing</span></a>. <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> with scalar type may\nbe used only with <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> spaces and with generic addressing, where the address\npoints to <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> space. <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> with vector type may be used only with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> space and with generic addressing where the address points to <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> space.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">atom <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.bf16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.bf16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.f16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.f16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.noftz.bf16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.noftz.bf16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.noftz.f16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.add.noftz.f16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.cas.b16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">atom.exch <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.f16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.global <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-atom\" target=\"_blank\" rel=\"noopener noreferrer\">atom.shared <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Reduction operations on global and shared memory.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "atype":
            return {
                "html": "<p>Two-way SIMD parallel arithmetic operation with secondary operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions\" target=\"_blank\" rel=\"noopener noreferrer\">atype <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The SIMD video instructions operate on pairs of 16-bit values and quads of 8-bit values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions"
            };

        case "b":
            return {
                "html": "<p>PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\nspace the parameter points, and for optionally specifying the alignment of the memory to which the\nparameter points.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2\" target=\"_blank\" rel=\"noopener noreferrer\">b <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\n\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\n\nspac...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2"
            };

        case "bar":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Performs barrier synchronization and communication within a CTA. Each CTA instance has sixteen\nbarriers numbered <code class=\"docutils literal notranslate\"><span class=\"pre\">0..15</span></code>.</p>\n<p>PTX ISA version 6.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">bar <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">bar.arrive <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-bar\" target=\"_blank\" rel=\"noopener noreferrer\">bar.cta <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">bar.red.popc.u32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-bar\" target=\"_blank\" rel=\"noopener noreferrer\">bar.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">bar.warp.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Barrier synchronization.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "barrier":
            return {
                "html": "<p>PTX ISA version 6.0 introduces the following new features:</p>\n<p>PTX ISA version 7.8 introduces the following new features:</p>\n<p>Performs barrier synchronization and communication within a cluster.</p>\n<p>Performs barrier synchronization and communication within a CTA. Each CTA instance has sixteen\nbarriers numbered <code class=\"docutils literal notranslate\"><span class=\"pre\">0..15</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">barrier <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">barrier.cluster <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-barrier-cluster\" target=\"_blank\" rel=\"noopener noreferrer\">barrier.cluster.arrive <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-barrier-cluster\" target=\"_blank\" rel=\"noopener noreferrer\">barrier.cluster.wait <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-bar\" target=\"_blank\" rel=\"noopener noreferrer\">barrier.cta <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Barrier synchronization.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0"
            };

        case "base":
            return {
                "html": "<p>Given a 32-bit value <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code> and an integer value <code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code> (between 0 and 31), find the n-th (given\nby offset) set bit in <code class=\"docutils literal notranslate\"><span class=\"pre\">mask</span></code> from the <code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code> bit, and store the bit position in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. If not\nfound, store 0xffffffff in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-fns\" target=\"_blank\" rel=\"noopener noreferrer\">base(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandbasemust be <= 31, otherwise behavior is undefined.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-fns"
            };

        case "bfe":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">bfe <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "bfi":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">bfi <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "bfind":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">bfind <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "bmsk":
            return {
                "html": "<p>PTX ISA version 7.6 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-6\" target=\"_blank\" rel=\"noopener noreferrer\">bmsk <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.6 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-6"
            };

        case "bra":
            return {
                "html": "<p>Continue execution at the target. Conditional branches are specified by using a guard predicate. The\nbranch target must be a label.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-bra\" target=\"_blank\" rel=\"noopener noreferrer\">bra <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-bra\" target=\"_blank\" rel=\"noopener noreferrer\">bra.uni <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Branch to a target and continue execution there.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-bra"
            };

        case "brev":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">brev <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "brkpt":
            return {
                "html": "<p>Suspends execution.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-brkpt\" target=\"_blank\" rel=\"noopener noreferrer\">brkpt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Breakpoint.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-brkpt"
            };

        case "brx":
            return {
                "html": "<p>PTX ISA version 6.0 introduces the following new features:</p>\n<p>Index into a list of possible destination labels, and continue execution from the chosen\nlabel. Conditional branches are specified by using a guard predicate.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">brx.idx <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-brx-idx\" target=\"_blank\" rel=\"noopener noreferrer\">brx.idx.uni <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0"
            };

        case "bsel":
            return {
                "html": "<p>Four-way SIMD parallel comparison with secondary operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4\" target=\"_blank\" rel=\"noopener noreferrer\">bsel <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer quad byte SIMD comparison.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4"
            };

        case "btype":
            return {
                "html": "<p>Two-way SIMD parallel arithmetic operation with secondary operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions\" target=\"_blank\" rel=\"noopener noreferrer\">btype <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The SIMD video instructions operate on pairs of 16-bit values and quads of 8-bit values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions"
            };

        case "c":
            return {
                "html": "<p>Four-way SIMD parallel comparison with secondary operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4\" target=\"_blank\" rel=\"noopener noreferrer\">c <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer quad byte SIMD comparison.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4"
            };

        case "call":
            return {
                "html": "<p>Declares a list of potential branch targets for a subsequent <code class=\"docutils literal notranslate\"><span class=\"pre\">brx.idx</span></code>, and associates the list\nwith the label at the start of the line.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-directives\" target=\"_blank\" rel=\"noopener noreferrer\">call <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Declare a list of potential branch targets.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-directives"
            };

        case "clusterlaunchcontrol":
            return {
                "html": "<p>PTX ISA version 8.6 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-6\" target=\"_blank\" rel=\"noopener noreferrer\">clusterlaunchcontrol <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 8.6 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-6"
            };

        case "clz":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">clz <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "cnot":
            return {
                "html": "<p>Compute the logical negation using C/C++ semantics.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-cnot\" target=\"_blank\" rel=\"noopener noreferrer\">cnot <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "C/C++ style logical negation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-cnot"
            };

        case "collector":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.mma</span></code> is an asynchronous instruction which initiates an <em>MxNxK</em> matrix\nmultiply and accumulate operation,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">D</span> <span class=\"pre\">=</span> <span class=\"pre\">A*B+D</span></code>\nwhere the <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> matrix is <em>MxK</em>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> matrix is <em>KxN</em>, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">D</span></code> matrix is <em>MxN</em>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-mma\" target=\"_blank\" rel=\"noopener noreferrer\">collector <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "f16: supportsf16andbf16input types.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-mma"
            };

        case "copysign":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">copysign <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "cos":
            return {
                "html": "<p>Find the cosine of the angle <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> (in radians).</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-cos\" target=\"_blank\" rel=\"noopener noreferrer\">cos(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-cos\" target=\"_blank\" rel=\"noopener noreferrer\">cos.approx.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-cos\" target=\"_blank\" rel=\"noopener noreferrer\">cos.approx.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-cos\" target=\"_blank\" rel=\"noopener noreferrer\">cos.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-cos\" target=\"_blank\" rel=\"noopener noreferrer\">cos.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Find the cosine of a value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-cos"
            };

        case "count":
            return {
                "html": "<p>The pending count can be queried from the opaque mbarrier state using <code class=\"docutils literal notranslate\"><span class=\"pre\">mbarrier.pending_count</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-pending-count\" target=\"_blank\" rel=\"noopener noreferrer\">count <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Query the pending arrival count from the opaque mbarrier state.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-pending-count"
            };

        case "cp":
            return {
                "html": "<p>PTX ISA version 7.4 introduces the following new features:</p>\n<p>PTX ISA version 8.2 introduces the following new features:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">cp.async.bulk.prefetch</span></code> is a non-blocking instruction which may initiate an asynchronous prefetch\nof data from the location specified by source address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">srcMem</span></code>, in <code class=\"docutils literal notranslate\"><span class=\"pre\">.src</span></code> statespace, to\nthe L2 cache.</p>\n<p>PTX ISA version 8.6 introduces the following new features:</p>\n<p>The <em>test_wait</em> and <em>try_wait</em> operations test for the completion of the current or the immediately\npreceding phase of an <em>mbarrier object</em> at the location specified by the operand <code class=\"docutils literal notranslate\"><span class=\"pre\">addr</span></code>.</p>\n<p>Following are the restrictions on the types <code class=\"docutils literal notranslate\"><span class=\"pre\">.b4x16</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">.b4x16_p64</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">.b6x16_p32</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.b6p2x16</span></code>:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">cp.reduce.async.bulk</span></code> is a non-blocking instruction which initiates an asynchronous reduction\noperation on an array of memory locations specified by the destination address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">dstMem</span></code>\nwith the source array whose location is specified by the source address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">srcMem</span></code>. The size\nof the source and the destination array must be the same and is specified by the operand <code class=\"docutils literal notranslate\"><span class=\"pre\">size</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">cp.reduce.async.bulk.tensor</span></code> is a non-blocking instruction which initiates an asynchronous\nreduction operation of tensor data in the <code class=\"docutils literal notranslate\"><span class=\"pre\">.dst</span></code> state space with tensor data in the <code class=\"docutils literal notranslate\"><span class=\"pre\">.src</span></code>\nstate space.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4\" target=\"_blank\" rel=\"noopener noreferrer\">cp.async <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-2\" target=\"_blank\" rel=\"noopener noreferrer\">cp.async.bulk <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cp-async-bulk-prefetch\" target=\"_blank\" rel=\"noopener noreferrer\">cp.async.bulk.prefetch <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-6\" target=\"_blank\" rel=\"noopener noreferrer\">cp.async.bulk.prefetch.tensor <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-2\" target=\"_blank\" rel=\"noopener noreferrer\">cp.async.bulk.tensor <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-test-wait-try-wait\" target=\"_blank\" rel=\"noopener noreferrer\">cp.async.mbarrier.arrive <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-tensor-copy-restrictions\" target=\"_blank\" rel=\"noopener noreferrer\">cp.reduce.async.bulk <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cp-reduce-async-bulk\" target=\"_blank\" rel=\"noopener noreferrer\">cp.reduce.async.bulk.add.bf16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cp-reduce-async-bulk\" target=\"_blank\" rel=\"noopener noreferrer\">cp.reduce.async.bulk.add.f16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cp-reduce-async-bulk\" target=\"_blank\" rel=\"noopener noreferrer\">cp.reduce.async.bulk.add.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cp-reduce-async-bulk-tensor\" target=\"_blank\" rel=\"noopener noreferrer\">cp.reduce.async.bulk.tensor <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Initiates an asynchronous reduction operation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4"
            };

        case "createpolicy":
            return {
                "html": "<p>PTX ISA version 7.4 introduces the following new features:</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">createpolicy</span></code> instruction creates a cache eviction policy for the specified cache level in an\nopaque 64-bit register specified by the destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">cache-policy</span></code>. The cache eviction\npolicy specifies how cache eviction priorities are applied to global memory addresses used in memory\noperations with <code class=\"docutils literal notranslate\"><span class=\"pre\">.level::cache_hint</span></code> qualifier.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4\" target=\"_blank\" rel=\"noopener noreferrer\">createpolicy <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-createpolicy\" target=\"_blank\" rel=\"noopener noreferrer\">createpolicy.cvt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-createpolicy\" target=\"_blank\" rel=\"noopener noreferrer\">createpolicy.range <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.4 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4"
            };

        case "cta":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">cta <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "ctaid":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code> instruction requests atomically cancelling the launch of\na cluster that has not started running yet. It asynchronously writes an opaque response to shared\nmemory indicating whether the operation succeeded or failed. The completion of the asynchronous\noperation is tracked using the mbarrier completion mechanism at <code class=\"docutils literal notranslate\"><span class=\"pre\">.cluster</span></code> scope.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-try-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">ctaid <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Requests cancellation of cluster which is not launched yet.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-try-cancel"
            };

        case "ctype":
            return {
                "html": "<p>Perform a <code class=\"docutils literal notranslate\"><span class=\"pre\">MxNxK</span></code> matrix multiply and accumulate operation, <code class=\"docutils literal notranslate\"><span class=\"pre\">D</span> <span class=\"pre\">=</span> <span class=\"pre\">A*B+C</span></code>, where the A matrix is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">MxK</span></code>, the B matrix is <code class=\"docutils literal notranslate\"><span class=\"pre\">KxN</span></code>, and the C and D matrices are <code class=\"docutils literal notranslate\"><span class=\"pre\">MxN</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-mma\" target=\"_blank\" rel=\"noopener noreferrer\">ctype <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": ".m8n8k4: When.ctypeis.f32,.dtypemust also be.f32.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-mma"
            };

        case "cube":
            return {
                "html": "<p>PTX ISA version 4.3 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3\" target=\"_blank\" rel=\"noopener noreferrer\">cube <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 4.3 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3"
            };

        case "cvt":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Convert between different types and sizes.</p>\n<p>PTX ISA version 6.5 introduces the following new features:</p>\n<p><a class=\"reference internal\" href=\"#scalar-conversions-convert-instruction-precision-and-format-t1\"><span class=\"std std-numref\">Table 15</span></a> and\n<a class=\"reference internal\" href=\"#scalar-conversions-convert-instruction-precision-and-format-t2\"><span class=\"std std-numref\">Table 16</span></a> show what\nprecision and format the cvt instruction uses given operands of differing types. For example, if a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.s32.u16</span></code> instruction is given a <code class=\"docutils literal notranslate\"><span class=\"pre\">u16</span></code> source operand and <code class=\"docutils literal notranslate\"><span class=\"pre\">s32</span></code> as a destination operand,\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">u16</span></code> is zero-extended to <code class=\"docutils literal notranslate\"><span class=\"pre\">s32</span></code>.</p>\n<p>Convert a <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>, <a class=\"reference internal\" href=\"#kernel-function-parameters\"><span class=\"std std-ref\">Kernel Function Parameters</span></a>\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">.param</span></code>), <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">local</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">shared</span></code> address to a generic address, or vice-versa. The\nsource and destination addresses must be the same size. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u32.u64</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u64.u32</span></code> to\ntruncate or zero-extend addresses.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">cvt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.f16.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.f32.bf16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.f32.f16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.f32.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.ftz <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.ftz.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.ftz.f32.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.pack <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.rn.bf16x2.ue8m0x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-conversions\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.s32.u16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.u32.u64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">cvt.u64.u32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Introduced in PTX ISA version 2.0.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "cvta":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Convert a <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>, <a class=\"reference internal\" href=\"#kernel-function-parameters\"><span class=\"std std-ref\">Kernel Function Parameters</span></a>\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">.param</span></code>), <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">local</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">shared</span></code> address to a generic address, or vice-versa. The\nsource and destination addresses must be the same size. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u32.u64</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u64.u32</span></code> to\ntruncate or zero-extend addresses.</p>\n<p>PTX ISA version 3.1 introduces the following new features:</p>\n<p>PTX ISA version 8.3 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">cvta <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">cvta.const <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-1\" target=\"_blank\" rel=\"noopener noreferrer\">cvta.global <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">cvta.param <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-3\" target=\"_blank\" rel=\"noopener noreferrer\">cvta.to <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">cvta.to.const <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">cvta.to.param <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Introduced in PTX ISA version 2.0.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "d":
            return {
                "html": "<p>Four-way SIMD parallel comparison with secondary operation.</p>\n<p>Pick four arbitrary bytes from two 32-bit registers, and reassemble them into a 32-bit destination\nregister.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4\" target=\"_blank\" rel=\"noopener noreferrer\">d <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt\" target=\"_blank\" rel=\"noopener noreferrer\">d.b0 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt\" target=\"_blank\" rel=\"noopener noreferrer\">d.b1 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt\" target=\"_blank\" rel=\"noopener noreferrer\">d.b2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt\" target=\"_blank\" rel=\"noopener noreferrer\">d.b3 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Permute bytes from register pair.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions-vset4"
            };

        case "debug":
            return {
                "html": "<p>Specifies the set of features in the target architecture for which the current PTX code was\ngenerated. In general, generations of SM architectures follow an <em>onion layer</em> model, where each\ngeneration adds new features and retains all features of previous generations. The onion layer model\nallows the PTX code generated for a given target to be run on later generation devices.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ptx-module-directives-target\" target=\"_blank\" rel=\"noopener noreferrer\">debug <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Architecture and Platform target.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ptx-module-directives-target"
            };

        case "depthtextures":
            return {
                "html": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">tex.{1d,2d,3d}</span></code></p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-tex\" target=\"_blank\" rel=\"noopener noreferrer\">depthtextures <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Perform a texture memory lookup.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-tex"
            };

        case "discard":
            return {
                "html": "<p>PTX ISA version 7.4 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4\" target=\"_blank\" rel=\"noopener noreferrer\">discard <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.4 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-4"
            };

        case "div":
            return {
                "html": "<p>Divides <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> by <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>, stores result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.approx.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.approx.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.full.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.rn.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">div.rnd.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Divide one value by another.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-div"
            };

        case "dst":
            return {
                "html": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.alloc</span></code> is a potentially blocking instruction which dynamically allocates\nthe specified number of columns in the <a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a> and writes\nthe address of the allocated <a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a> into shared memory\nat the location specified by address operand dst. The <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.alloc</span></code> blocks if the\nrequested amount of <a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a> is not available and unblocks\nas soon as the requested amount of <a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a> becomes\navailable for allocation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-instructions-tcgen05-alloc-dealloc-relinquish-alloc-permit\" target=\"_blank\" rel=\"noopener noreferrer\">dst <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Alltcgen05instructions within a kernel must specify the same value for the.cta_groupqualifier.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-instructions-tcgen05-alloc-dealloc-relinquish-alloc-permit"
            };

        case "dtype":
            return {
                "html": "<p>Two-way SIMD parallel arithmetic operation with secondary operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions\" target=\"_blank\" rel=\"noopener noreferrer\">dtype <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The SIMD video instructions operate on pairs of 16-bit values and quads of 8-bit values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#simd-video-instructions"
            };

        case "e":
            return {
                "html": "<p>PTX ISA version 8.5 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-5\" target=\"_blank\" rel=\"noopener noreferrer\">e <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 8.5 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-5"
            };

        case "ecl":
            return {
                "html": "<p>Pick four arbitrary bytes from two 32-bit registers, and reassemble them into a 32-bit destination\nregister.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt\" target=\"_blank\" rel=\"noopener noreferrer\">ecl <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Permute bytes from register pair.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt"
            };

        case "ecr":
            return {
                "html": "<p>Pick four arbitrary bytes from two 32-bit registers, and reassemble them into a 32-bit destination\nregister.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt\" target=\"_blank\" rel=\"noopener noreferrer\">ecr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Permute bytes from register pair.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-prmt"
            };

        case "elect":
            return {
                "html": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">elect.sync</span></code> elects one predicated active leader thread from among a set of threads specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">membermask</span></code>. <code class=\"docutils literal notranslate\"><span class=\"pre\">laneid</span></code> of the elected thread is returned in the 32-bit destination operand\n<code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The sink symbol \u2018_\u2019 can be used for destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The predicate destination\n<code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> for the leader thread, and <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for all other threads.</p>\n<p>PTX ISA version 8.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-elect-sync\" target=\"_blank\" rel=\"noopener noreferrer\">elect <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-0\" target=\"_blank\" rel=\"noopener noreferrer\">elect.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Elect a leader thread from a set of threads.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-elect-sync"
            };

        case "eq":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">eq <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "equ":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">equ <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "exit":
            return {
                "html": "<p>Ends execution of a thread.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-exit\" target=\"_blank\" rel=\"noopener noreferrer\">exit <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Terminate a thread.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-exit"
            };

        case "f":
            return {
                "html": "<p>Specifies the set of features in the target architecture for which the current PTX code was\ngenerated. In general, generations of SM architectures follow an <em>onion layer</em> model, where each\ngeneration adds new features and retains all features of previous generations. The onion layer model\nallows the PTX code generated for a given target to be run on later generation devices.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ptx-module-directives-target\" target=\"_blank\" rel=\"noopener noreferrer\">f <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Architecture and Platform target.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ptx-module-directives-target"
            };

        case "false":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.query_cancel</span></code> can be used to decode opaque response\nwritten by instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">false <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Queries response ofclusterlaunchcontrol.try_canceloperation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel"
            };

        case "fence":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\n<p>PTX ISA version 7.5 introduces the following new features:</p>\n<p>The shared memory accesses by <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.mma</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.cp</span></code> operations are performed\nin the asynchronous proxy (async proxy).</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">fence <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-5\" target=\"_blank\" rel=\"noopener noreferrer\">fence.proxy <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-memory-consistency-model-smem-access\" target=\"_blank\" rel=\"noopener noreferrer\">fence.proxy.async <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">fence.sc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "flag":
            return {
                "html": "<p>Atomic reduction operations like <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> do not form acquire patterns with acquire fences.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#red-read\" target=\"_blank\" rel=\"noopener noreferrer\">flag <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Atomic reduction operations likereddo not form acquire patterns with acquire fences.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#red-read"
            };

        case "flist":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> instruction stores the address of the next instruction, so execution can resume at that\npoint after executing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ret</span></code> instruction. A <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is assumed to be divergent unless the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix is present. The <code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix indicates that the <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is guaranteed to be\nnon-divergent, i.e. all active threads in a warp that are currently executing this instruction have\nidentical values for the guard predicate and <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> target.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call\" target=\"_blank\" rel=\"noopener noreferrer\">flist <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Call a function, recording the return location.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call"
            };

        case "fma":
            return {
                "html": "<p>PTX ISA version 7.0 introduces the following new features:</p>\n<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Performs a fused multiply-add with no loss of precision in the intermediate product and addition.</p>\n<p>Multiplies two values and adds a third, and then writes the resulting value into a destination\nregister.</p>\n<p>Converts input operands <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> from <code class=\"docutils literal notranslate\"><span class=\"pre\">.atype</span></code> into <code class=\"docutils literal notranslate\"><span class=\"pre\">.f32</span></code> type. The converted values\nare then used to perform fused multiply-add operation with no loss of precision in the intermediate\nproduct and addition. The resulting value is stored in the destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0\" target=\"_blank\" rel=\"noopener noreferrer\">fma <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">fma.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-fma\" target=\"_blank\" rel=\"noopener noreferrer\">fma.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">fma.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-fma\" target=\"_blank\" rel=\"noopener noreferrer\">fma.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-fma\" target=\"_blank\" rel=\"noopener noreferrer\">fma.ftz.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">fma.rn.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">fma.rn.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#mixed-precision-floating-point-instructions-fma\" target=\"_blank\" rel=\"noopener noreferrer\">fma.sat <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-fma\" target=\"_blank\" rel=\"noopener noreferrer\">fma.sat.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Fused multiply-add.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0"
            };

        case "fns":
            return {
                "html": "<p>PTX ISA version 6.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">fns <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0"
            };

        case "foo":
            return {
                "html": "<p>In PTX, functions are declared and defined using the <code class=\"docutils literal notranslate\"><span class=\"pre\">.func</span></code> directive. A function <em>declaration</em>\nspecifies an optional list of return parameters, the function name, and an optional list of input\nparameters; together these specify the function\u2019s interface, or prototype. A function <em>definition</em>\nspecifies both the interface and the body of the function. A function must be declared or defined\nprior to being called.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#function-declarations-and-definitions\" target=\"_blank\" rel=\"noopener noreferrer\">foo <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "In PTX, functions are declared and defined using the.funcdirective. A functiondeclarationspecifies an optional list of return parameters, the function name, and an optional list of input\n\nparameters; t...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#function-declarations-and-definitions"
            };

        case "fproto":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> instruction stores the address of the next instruction, so execution can resume at that\npoint after executing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ret</span></code> instruction. A <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is assumed to be divergent unless the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix is present. The <code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix indicates that the <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is guaranteed to be\nnon-divergent, i.e. all active threads in a warp that are currently executing this instruction have\nidentical values for the guard predicate and <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> target.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call\" target=\"_blank\" rel=\"noopener noreferrer\">fproto <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Call a function, recording the return location.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call"
            };

        case "fptr":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> instruction stores the address of the next instruction, so execution can resume at that\npoint after executing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ret</span></code> instruction. A <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is assumed to be divergent unless the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix is present. The <code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix indicates that the <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is guaranteed to be\nnon-divergent, i.e. all active threads in a warp that are currently executing this instruction have\nidentical values for the guard predicate and <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> target.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call\" target=\"_blank\" rel=\"noopener noreferrer\">fptr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Call a function, recording the return location.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call"
            };

        case "fraction":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">createpolicy</span></code> instruction creates a cache eviction policy for the specified cache level in an\nopaque 64-bit register specified by the destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">cache-policy</span></code>. The cache eviction\npolicy specifies how cache eviction priorities are applied to global memory addresses used in memory\noperations with <code class=\"docutils literal notranslate\"><span class=\"pre\">.level::cache_hint</span></code> qualifier.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-createpolicy\" target=\"_blank\" rel=\"noopener noreferrer\">fraction <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Create a cache eviction policy for the specified cache level.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-createpolicy"
            };

        case "frequency":
            return {
                "html": "<p>PTX ISA version 9.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-9-0\" target=\"_blank\" rel=\"noopener noreferrer\">frequency <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 9.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-9-0"
            };

        case "func":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> instruction stores the address of the next instruction, so execution can resume at that\npoint after executing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ret</span></code> instruction. A <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is assumed to be divergent unless the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix is present. The <code class=\"docutils literal notranslate\"><span class=\"pre\">.uni</span></code> suffix indicates that the <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> is guaranteed to be\nnon-divergent, i.e. all active threads in a warp that are currently executing this instruction have\nidentical values for the guard predicate and <code class=\"docutils literal notranslate\"><span class=\"pre\">call</span></code> target.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call\" target=\"_blank\" rel=\"noopener noreferrer\">func <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Call a function, recording the return location.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-call"
            };

        case "g":
            return {
                "html": "<p>PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\nspace the parameter points, and for optionally specifying the alignment of the memory to which the\nparameter points.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2\" target=\"_blank\" rel=\"noopener noreferrer\">g <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\n\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\n\nspac...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2"
            };

        case "ge":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">ge <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "generic":
            return {
                "html": "<p>Write register <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code> with the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions\" target=\"_blank\" rel=\"noopener noreferrer\">generic <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Instructionsld,st,suld, andsustsupport optional cache operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions"
            };

        case "getctarank":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">getctarank <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.8 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "geu":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">geu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "gl":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">gl <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "global":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">tensormap.cp_fenceproxy</span></code> instructions perform the following operations in order :</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-tensormap-cp-fenceproxy\" target=\"_blank\" rel=\"noopener noreferrer\">global <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "A fused copy and fence operation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-tensormap-cp-fenceproxy"
            };

        case "gpu":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">gpu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "griddepcontrol":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">griddepcontrol</span></code> instruction allows the dependent grids and prerequisite grids as defined by\nthe runtime, to control execution in the following way:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">griddepcontrol <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-griddepcontrol\" target=\"_blank\" rel=\"noopener noreferrer\">griddepcontrol.wait <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Control execution of dependent grids.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "gt":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">gt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "gtu":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">gtu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "hi":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the first destination operand. A related value computed using\nthe complement of the compare result is written to the second destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">hi <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The signed and unsigned comparison operators areeq,ne,lt,le,gt,ge.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp"
            };

        case "hs":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the first destination operand. A related value computed using\nthe complement of the compare result is written to the second destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">hs <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The signed and unsigned comparison operators areeq,ne,lt,le,gt,ge.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp"
            };

        case "i":
            return {
                "html": "<p>A warpgroup executing sparse <code class=\"docutils literal notranslate\"><span class=\"pre\">wgmma.mma_async.m64nNk16</span></code> will compute an MMA operation of shape\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.m64nNk16</span></code> where N is a valid n dimension as listed in\n<a class=\"reference internal\" href=\"#asynchronous-warpgroup-level-matrix-shape\"><span class=\"std std-ref\">Matrix Shape</span></a>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#asynchronous-warpgroup-level-matrix-fragment-sparse-wgmma-64n16\" target=\"_blank\" rel=\"noopener noreferrer\">i <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "A warpgroup executing sparsewgmma.mma_async.m64nNk16will compute an MMA operation of shape.m64nNk16where N is a valid n dimension as listed inMatrix Shape.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#asynchronous-warpgroup-level-matrix-fragment-sparse-wgmma-64n16"
            };

        case "idesc":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.mma.ws.sp</span></code> is an asynchronous instruction which initiates\nan <em>MxNxK</em> matrix multiply and accumulate operation,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">D</span> <span class=\"pre\">=</span> <span class=\"pre\">A*B+D</span></code>\nwhere the <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> matrix is <em>Mx(K/2)</em>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> matrix is <em>KxN</em>, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">D</span></code> matrix\nis <em>MxN</em>. <a class=\"reference internal\" href=\"#tcgen05-sparse-matrices\"><span class=\"std std-ref\">Sparse Matrices</span></a> describes the details of the\nsparsity.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-mma-instructions-mma-ws-sp\" target=\"_blank\" rel=\"noopener noreferrer\">idesc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The operation of the formD=A*Bis issued when the input predicate argumentenable-input-dis false.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-mma-instructions-mma-ws-sp"
            };

        case "index":
            return {
                "html": "<p>Index into a list of possible destination labels, and continue execution from the chosen\nlabel. Conditional branches are specified by using a guard predicate.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-brx-idx\" target=\"_blank\" rel=\"noopener noreferrer\">index <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Branch to a label indexed from a list of potential branch targets.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-brx-idx"
            };

        case "initval":
            return {
                "html": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">st.bulk</span></code> instruction initializes a region of shared memory starting from the location specified\nby destination address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st-bulk\" target=\"_blank\" rel=\"noopener noreferrer\">initval <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Initializes a region of memory as specified by state space.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st-bulk"
            };

        case "isspacep":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Write predicate register <code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code> if generic address a falls within the specified state\nspace window and with <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> otherwise. Destination <code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> has type <code class=\"docutils literal notranslate\"><span class=\"pre\">.pred</span></code>; the source address\noperand must be of type <code class=\"docutils literal notranslate\"><span class=\"pre\">.u32</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.u64</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">isspacep <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-isspacep\" target=\"_blank\" rel=\"noopener noreferrer\">isspacep.const <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-isspacep\" target=\"_blank\" rel=\"noopener noreferrer\">isspacep.global <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-isspacep\" target=\"_blank\" rel=\"noopener noreferrer\">isspacep.param <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Query whether a generic address falls within a specified state space window.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "istypep":
            return {
                "html": "<p>PTX ISA version 4.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-0\" target=\"_blank\" rel=\"noopener noreferrer\">istypep <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 4.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-0"
            };

        case "label":
            return {
                "html": "<p>Declares the source file location (source file, line number, and column position) to be associated\nwith lexically subsequent PTX instructions. <code class=\"docutils literal notranslate\"><span class=\"pre\">.loc</span></code> refers to <code class=\"docutils literal notranslate\"><span class=\"pre\">file_index</span></code> which is defined by a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.file</span></code> directive.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#debugging-directives-loc\" target=\"_blank\" rel=\"noopener noreferrer\">label <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Source file location.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#debugging-directives-loc"
            };

        case "lane":
            return {
                "html": "<p>The data movement shape indicates the dimension of the data to be moved to or from the\n<a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a>. These shapes are described as a tuple <code class=\"docutils literal notranslate\"><span class=\"pre\">lane</span> <span class=\"pre\">x</span> <span class=\"pre\">size</span></code> where:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-data-movement-shape\" target=\"_blank\" rel=\"noopener noreferrer\">lane <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The data movement shape indicates the dimension of the data to be moved to or from theTensor Memory. These shapes are described as a tuplelanexsizewhere:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-data-movement-shape"
            };

        case "laneid":
            return {
                "html": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">elect.sync</span></code> elects one predicated active leader thread from among a set of threads specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">membermask</span></code>. <code class=\"docutils literal notranslate\"><span class=\"pre\">laneid</span></code> of the elected thread is returned in the 32-bit destination operand\n<code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The sink symbol \u2018_\u2019 can be used for destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The predicate destination\n<code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> for the leader thread, and <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for all other threads.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-elect-sync\" target=\"_blank\" rel=\"noopener noreferrer\">laneid <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Elect a leader thread from a set of threads.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-elect-sync"
            };

        case "lanexsize":
            return {
                "html": "<p>The data movement shape indicates the dimension of the data to be moved to or from the\n<a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a>. These shapes are described as a tuple <code class=\"docutils literal notranslate\"><span class=\"pre\">lane</span> <span class=\"pre\">x</span> <span class=\"pre\">size</span></code> where:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-data-movement-shape\" target=\"_blank\" rel=\"noopener noreferrer\">lanexsize <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The data movement shape indicates the dimension of the data to be moved to or from theTensor Memory. These shapes are described as a tuplelanexsizewhere:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-data-movement-shape"
            };

        case "ld":
            return {
                "html": "<p>Load register variable <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code> from the location specified by the source address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> in\nspecified state space. If no state space is given, perform the load using <a class=\"reference internal\" href=\"#generic-addressing\"><span class=\"std std-ref\">Generic Addressing</span></a>.</p>\n<p>Load register variable <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code> from the location specified by the source address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> in the\nglobal state space, and optionally cache in non-coherent read-only cache.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">alloca</span></code> instruction dynamically allocates memory on the stack frame of the current function\nand updates the stack pointer accordingly. The returned pointer <code class=\"docutils literal notranslate\"><span class=\"pre\">ptr</span></code> points to local memory and\ncan be used in the address operand of <code class=\"docutils literal notranslate\"><span class=\"pre\">ld.local</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">st.local</span></code> instructions.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld\" target=\"_blank\" rel=\"noopener noreferrer\">ld.acquire <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld-global-nc\" target=\"_blank\" rel=\"noopener noreferrer\">ld.b16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld\" target=\"_blank\" rel=\"noopener noreferrer\">ld.b32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld\" target=\"_blank\" rel=\"noopener noreferrer\">ld.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#stack-manipulation-instructions-alloca\" target=\"_blank\" rel=\"noopener noreferrer\">ld.local <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld\" target=\"_blank\" rel=\"noopener noreferrer\">ld.mmio <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld\" target=\"_blank\" rel=\"noopener noreferrer\">ld.relaxed <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld\" target=\"_blank\" rel=\"noopener noreferrer\">ld.volatile <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Dynamically allocate memory on stack.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ld"
            };

        case "ldmatrix":
            return {
                "html": "<p>PTX ISA version 6.5 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5\" target=\"_blank\" rel=\"noopener noreferrer\">ldmatrix <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.5 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5"
            };

        case "ldu":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Load <em>read-only</em> data into register variable <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code> from the location specified by the source address\noperand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> in the global state space, where the address is guaranteed to be the same across all\nthreads in the warp. If no state space is given, perform the load using <a class=\"reference internal\" href=\"#generic-addressing\"><span class=\"std std-ref\">Generic Addressing</span></a>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">ldu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ldu\" target=\"_blank\" rel=\"noopener noreferrer\">ldu.b16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ldu\" target=\"_blank\" rel=\"noopener noreferrer\">ldu.b32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-ldu\" target=\"_blank\" rel=\"noopener noreferrer\">ldu.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Load read-only data from an address that is common across threads in the warp.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "le":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">le <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "len":
            return {
                "html": "<p>PTX 2.3 adds support for texture arrays. The texture array feature supports access to an array of 1D\nor 2D textures, where an integer indexes into the array of textures, and then one or two\nsingle-precision floating point coordinates are used to address within the selected 1D or 2D\ntexture.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-3\" target=\"_blank\" rel=\"noopener noreferrer\">len <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX 2.3 adds support for texture arrays. The texture array feature supports access to an array of 1D\n\nor 2D textures, where an integer indexes into the array of textures, and then one or two\n\nsingle-pre...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-3"
            };

        case "leu":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">leu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "level":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">level <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "lo":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the first destination operand. A related value computed using\nthe complement of the compare result is written to the second destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">lo <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The signed and unsigned comparison operators areeq,ne,lt,le,gt,ge.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp"
            };

        case "local":
            return {
                "html": "<p>Convert a <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>, <a class=\"reference internal\" href=\"#kernel-function-parameters\"><span class=\"std std-ref\">Kernel Function Parameters</span></a>\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">.param</span></code>), <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">local</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">shared</span></code> address to a generic address, or vice-versa. The\nsource and destination addresses must be the same size. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u32.u64</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u64.u32</span></code> to\ntruncate or zero-extend addresses.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">local <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Introduced in PTX ISA version 2.0.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta"
            };

        case "lod":
            return {
                "html": "<p>Query an attribute of a texture or sampler. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> is either a <code class=\"docutils literal notranslate\"><span class=\"pre\">.texref</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.samplerref</span></code> variable, or a <code class=\"docutils literal notranslate\"><span class=\"pre\">.u64</span></code> register.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-txq\" target=\"_blank\" rel=\"noopener noreferrer\">lod <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Query texture and sampler attributes.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-txq"
            };

        case "ls":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the first destination operand. A related value computed using\nthe complement of the compare result is written to the second destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">ls <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The signed and unsigned comparison operators areeq,ne,lt,le,gt,ge.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp"
            };

        case "lt":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">lt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "ltu":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">ltu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "m":
            return {
                "html": "<p>In this section we describe how the contents of thread registers are associated with fragments of A\nmatrix and the sparsity metadata.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#asynchronous-warpgroup-level-matrix-fragments-for-sparse-wgmma\" target=\"_blank\" rel=\"noopener noreferrer\">m <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "In this section we describe how the contents of thread registers are associated with fragments of A\n\nmatrix and the sparsity metadata.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#asynchronous-warpgroup-level-matrix-fragments-for-sparse-wgmma"
            };

        case "mad":
            return {
                "html": "<p>Multiplies two values and adds a third, and then writes the resulting value into a destination\nregister.</p>\n<p>PTX ISA version 3.0 introduces the following new features:</p>\n<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>PTX ISA version 3.1 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">mad(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0\" target=\"_blank\" rel=\"noopener noreferrer\">mad.cc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">mad.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">mad.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">mad.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-1\" target=\"_blank\" rel=\"noopener noreferrer\">mad.rn.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">mad.rn.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad\" target=\"_blank\" rel=\"noopener noreferrer\">mad.sat.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Multiply two values and add a third value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mad"
            };

        case "madc":
            return {
                "html": "<p>PTX ISA version 3.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0\" target=\"_blank\" rel=\"noopener noreferrer\">madc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 3.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0"
            };

        case "mapa":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">mapa <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.8 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "mask":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">\"used_bytes_mask\"</span> <span class=\"pre\">pragma</span></code> is a directive that specifies used bytes in a load\noperation based on the mask provided.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#pragma-strings-used-bytes-mask\" target=\"_blank\" rel=\"noopener noreferrer\">mask <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Mask for indicating used bytes in data of ld operation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#pragma-strings-used-bytes-mask"
            };

        case "match":
            return {
                "html": "<p>PTX ISA version 6.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">match.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0"
            };

        case "max":
            return {
                "html": "<p>PTX ISA version 7.0 introduces the following new features:</p>\n<p>Store the maximum of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> and optionally <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\n<p>Store the maximum of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0\" target=\"_blank\" rel=\"noopener noreferrer\">max <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-max\" target=\"_blank\" rel=\"noopener noreferrer\">max.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-max\" target=\"_blank\" rel=\"noopener noreferrer\">max.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-max\" target=\"_blank\" rel=\"noopener noreferrer\">max.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-max\" target=\"_blank\" rel=\"noopener noreferrer\">max.relu.s32(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-max\" target=\"_blank\" rel=\"noopener noreferrer\">max.u16x2(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-max\" target=\"_blank\" rel=\"noopener noreferrer\">max.xorsign.abs(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Find the maximum of two values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0"
            };

        case "mbar":
            return {
                "html": "<p>The instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.commit</span></code> is an asynchronous instruction which makes the mbarrier object,\nspecified by the address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">mbar</span></code>, track the completion of all the prior asynchronous\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05</span></code> operations, as listed in\n<a class=\"reference internal\" href=\"#tcgen05-memory-consistency-model-mbarrier-completion\"><span class=\"std std-ref\">mbarrier based completion mechanism</span></a>,\ninitiated by the executing thread. Upon the completion of the tracked asynchronous <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05</span></code>\noperations, the signal specified by the <code class=\"docutils literal notranslate\"><span class=\"pre\">.completion_mechanism</span></code> is triggered by the system\non the mbarrier object.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen-async-sync-operations-commit\" target=\"_blank\" rel=\"noopener noreferrer\">mbar <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Alltcgen05instructions within a kernel must specify the same value for the.cta_groupqualifier.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen-async-sync-operations-commit"
            };

        case "mbarrier":
            return {
                "html": "<p>PTX ISA version 7.0 introduces the following new features:</p>\n<p>PTX ISA version 8.0 introduces the following new features:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">mbarrier.inval</span></code> invalidates the <em>mbarrier object</em> at the location specified by the address\noperand <code class=\"docutils literal notranslate\"><span class=\"pre\">addr</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0\" target=\"_blank\" rel=\"noopener noreferrer\">mbarrier <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-0\" target=\"_blank\" rel=\"noopener noreferrer\">mbarrier.arrive <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-inval\" target=\"_blank\" rel=\"noopener noreferrer\">mbarrier.init <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-inval\" target=\"_blank\" rel=\"noopener noreferrer\">mbarrier.inval <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Invalidates thembarrier object.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0"
            };

        case "membar":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\n<p>PTX ISA version 7.5 introduces the following new features:</p>\n<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">membar <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-5\" target=\"_blank\" rel=\"noopener noreferrer\">membar.proxy <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">membar.sys <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.8 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "membermask":
            return {
                "html": "<p><code class=\"docutils literal notranslate\"><span class=\"pre\">elect.sync</span></code> elects one predicated active leader thread from among a set of threads specified by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">membermask</span></code>. <code class=\"docutils literal notranslate\"><span class=\"pre\">laneid</span></code> of the elected thread is returned in the 32-bit destination operand\n<code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The sink symbol \u2018_\u2019 can be used for destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The predicate destination\n<code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> for the leader thread, and <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for all other threads.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-elect-sync\" target=\"_blank\" rel=\"noopener noreferrer\">membermask <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Elect a leader thread from a set of threads.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-elect-sync"
            };

        case "min":
            return {
                "html": "<p>PTX ISA version 7.0 introduces the following new features:</p>\n<p>Store the minimum of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> and optionally <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\n<p>Store the minimum of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0\" target=\"_blank\" rel=\"noopener noreferrer\">min <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.relu.s32(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.u16x2(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.xorsign(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-min\" target=\"_blank\" rel=\"noopener noreferrer\">min.xorsign.abs(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Find the minimum of two values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0"
            };

        case "mipmaps":
            return {
                "html": "<p>PTX ISA version 3.1 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-1\" target=\"_blank\" rel=\"noopener noreferrer\">mipmaps <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 3.1 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-1"
            };

        case "mma":
            return {
                "html": "<p>PTX ISA version 6.4 introduces the following new features:</p>\n<p>Perform a <code class=\"docutils literal notranslate\"><span class=\"pre\">MxNxK</span></code> matrix multiply and accumulate operation, <code class=\"docutils literal notranslate\"><span class=\"pre\">D</span> <span class=\"pre\">=</span> <span class=\"pre\">A*B+C</span></code>, where the A matrix is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">MxK</span></code>, the B matrix is <code class=\"docutils literal notranslate\"><span class=\"pre\">KxN</span></code>, and the C and D matrices are <code class=\"docutils literal notranslate\"><span class=\"pre\">MxN</span></code>.</p>\n<p>A warp executing sparse <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k128</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">.u4</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">.s4</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">.e2m1</span></code> integer type will compute an MMA\noperation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k128</span></code>.</p>\n<p>A warp executing sparse <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k16</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">.tf32</span></code> floating point type will compute an MMA\noperation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k16</span></code>.</p>\n<p>A warp executing <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k256</span></code> will compute an MMA operation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k256</span></code>.</p>\n<p>A warp executing sparse <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k32</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">.u8</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">.s8</span></code> integer type will compute an MMA\noperation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k32</span></code>.</p>\n<p>A warp executing <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k4</span></code> will compute an MMA operation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k4</span></code>.</p>\n<p>A warp executing sparse <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k64</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">.u4</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">.s4</span></code> integer type will compute an MMA\noperation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k64</span></code>.</p>\n<p>A warp executing sparse <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m16n8k8</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">.tf32</span></code> floating point type will compute an MMA\noperation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m16n8k8</span></code>.</p>\n<p>A warp executing <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m8n8k128</span></code> will compute an MMA operation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m8n8k128</span></code>.</p>\n<p>A warp executing <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m8n8k16</span></code> will compute an MMA operation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m8n8k16</span></code>.</p>\n<p>A warp executing <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m8n8k32</span></code> will compute an MMA operation of shape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m8n8k32</span></code>.</p>\n<p>A warp executing <code class=\"docutils literal notranslate\"><span class=\"pre\">mma.m8n8k4</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">.f64</span></code> floating point type will compute an MMA operation of\nshape <code class=\"docutils literal notranslate\"><span class=\"pre\">.m8n8k4</span></code>.</p>\n<p>PTX ISA version 8.4 introduces the following new features:</p>\n<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.mma.ws.sp</span></code> is an asynchronous instruction which initiates\nan <em>MxNxK</em> matrix multiply and accumulate operation,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">D</span> <span class=\"pre\">=</span> <span class=\"pre\">A*B+D</span></code>\nwhere the <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> matrix is <em>Mx(K/2)</em>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> matrix is <em>KxN</em>, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">D</span></code> matrix\nis <em>MxN</em>. <a class=\"reference internal\" href=\"#tcgen05-sparse-matrices\"><span class=\"std std-ref\">Sparse Matrices</span></a> describes the details of the\nsparsity.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-4\" target=\"_blank\" rel=\"noopener noreferrer\">mma <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-mma\" target=\"_blank\" rel=\"noopener noreferrer\">mma.and.popc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-sparse-mma-168128-u4s4\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k128 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-sparse-mma-16816-tf32\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-168256\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k256 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-sparse-mma-16832-u8s8\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-1684\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k4 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-sparse-mma-16864-u4s4\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-sparse-mma-1688-tf32\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m16n8k8 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-88128\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m8n8k128 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-8816\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m8n8k16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-8832\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m8n8k32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-884-f64\" target=\"_blank\" rel=\"noopener noreferrer\">mma.m8n8k4 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-4\" target=\"_blank\" rel=\"noopener noreferrer\">mma.sp <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-mma-instructions-mma-ws-sp\" target=\"_blank\" rel=\"noopener noreferrer\">mma.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-mma\" target=\"_blank\" rel=\"noopener noreferrer\">mma.sync.m8n8k4 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-mma\" target=\"_blank\" rel=\"noopener noreferrer\">mma.xor.popc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": ".m8n8k4: When.ctypeis.f32,.dtypemust also be.f32.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-4"
            };

        case "mov":
            return {
                "html": "<p>Write register <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code> with the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-mov\" target=\"_blank\" rel=\"noopener noreferrer\">mov.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Write registerdwith the value ofa.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-mov"
            };

        case "movmatrix":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">movmatrix <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.8 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "msb":
            return {
                "html": "<p>Extract bit field from <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and place the zero or sign-extended result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. Source <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> gives\nthe bit field starting bit position, and source <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> gives the bit field length in bits.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-bfe\" target=\"_blank\" rel=\"noopener noreferrer\">msb(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Bit Field Extract.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-bfe"
            };

        case "mul":
            return {
                "html": "<p>Compute the product of two values.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul.ftz.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-mul\" target=\"_blank\" rel=\"noopener noreferrer\">mul.sat.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Multiply two values.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-mul"
            };

        case "multimem":
            return {
                "html": "<p>PTX ISA version 8.1 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-1\" target=\"_blank\" rel=\"noopener noreferrer\">multimem.red <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-1\" target=\"_blank\" rel=\"noopener noreferrer\">multimem.st <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 8.1 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-1"
            };

        case "n":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">\"frequency\"</span> <span class=\"pre\">pragma</span></code> is a directive that specifies the number of times a basic block is\nexecuted by an executing thread. The optimizing compiler backend treats this pragma as a hint\nwhich will be used for optimizations.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#pragma-strings-frequency\" target=\"_blank\" rel=\"noopener noreferrer\">n <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Specify frequency for basic block execution.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#pragma-strings-frequency"
            };

        case "nan":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">nan <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "nanosleep":
            return {
                "html": "<p>PTX ISA version 6.3 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-3\" target=\"_blank\" rel=\"noopener noreferrer\">nanosleep <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.3 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-3"
            };

        case "ne":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">ne <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "neg":
            return {
                "html": "<p>PTX ISA version 6.0 introduces the following new features:</p>\n<p>Negate the sign of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and store the result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">neg <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-neg\" target=\"_blank\" rel=\"noopener noreferrer\">neg.bf16(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-floating-point-instructions-neg\" target=\"_blank\" rel=\"noopener noreferrer\">neg.bf16x2(fp16) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-neg\" target=\"_blank\" rel=\"noopener noreferrer\">neg.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-neg\" target=\"_blank\" rel=\"noopener noreferrer\">neg.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-neg\" target=\"_blank\" rel=\"noopener noreferrer\">neg.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Arithmetic negate.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0"
            };

        case "neu":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">neu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "not":
            return {
                "html": "<p>Invert the bits in <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-not\" target=\"_blank\" rel=\"noopener noreferrer\">not <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Bitwise negation; one\u2019s complement.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-not"
            };

        case "ntid":
            return {
                "html": "<p>The <em>Parallel Thread Execution (PTX)</em> programming model is explicitly parallel: a PTX program\nspecifies the execution of a given thread of a parallel thread array. A <em>cooperative thread array</em>,\nor CTA, is an array of threads that execute a kernel concurrently or in parallel.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">ntid <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">ntid.x <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">ntid.y <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">ntid.z <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "TheParallel Thread Execution (PTX)programming model is explicitly parallel: a PTX program\n\nspecifies the execution of a given thread of a parallel thread array. Acooperative thread array,\n\nor CTA, is an...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays"
            };

        case "num":
            return {
                "html": "<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">num <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Operandc,pandqhas type.pred.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#half-precision-comparison-instructions-setp"
            };

        case "numeric":
            return {
                "html": "<p>The ordered floating-point comparisons are <code class=\"docutils literal notranslate\"><span class=\"pre\">eq</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ne</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">lt</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">le</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">gt</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">ge</span></code>. If\neither operand is <code class=\"docutils literal notranslate\"><span class=\"pre\">NaN</span></code>, the result is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. <a class=\"reference internal\" href=\"#floating-point-comparisons-floating-point-operators\"><span class=\"std std-numref\">Table 23</span></a> lists the floating-point\ncomparison operators.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-comparisons\" target=\"_blank\" rel=\"noopener noreferrer\">numeric <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The ordered floating-point comparisons areeq,ne,lt,le,gt, andge. If\n\neither operand isNaN, the result isFalse.Table 23lists the floating-point\n\ncomparison operators.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-comparisons"
            };

        case "opcode":
            return {
                "html": "<p>PTX instructions generally have from zero to four operands, plus an optional guard predicate\nappearing after an <code class=\"docutils literal notranslate\"><span class=\"pre\">@</span></code> symbol to the left of the <code class=\"docutils literal notranslate\"><span class=\"pre\">opcode</span></code>:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ptx-instructions\" target=\"_blank\" rel=\"noopener noreferrer\">opcode <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX instructions generally have from zero to four operands, plus an optional guard predicate\n\nappearing after an@symbol to the left of theopcode:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ptx-instructions"
            };

        case "ord":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">tensormap.replace</span></code> instruction replaces the field, specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">.field</span></code> qualifier,\nof the tensor-map object at the location specified by the address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">addr</span></code> with a\nnew value. The new value is specified by the argument <code class=\"docutils literal notranslate\"><span class=\"pre\">new_val</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-tensormap-replace\" target=\"_blank\" rel=\"noopener noreferrer\">ord <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Modifies the field of a tensor-map object.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-tensormap-replace"
            };

        case "p":
            return {
                "html": "<p>Collectively store one or more matrices across all threads in a warp to the location indicated by\nthe address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code>, in <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> state space. If no state space is provided, generic\naddressing is used, such that the address in <code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> points into <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> space. If the generic\naddress doesn\u2019t fall in <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> state space, then the behavior is undefined.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-stmatrix\" target=\"_blank\" rel=\"noopener noreferrer\">p <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Collectively store one or more matrices to shared memory.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-stmatrix"
            };

        case "pmevent":
            return {
                "html": "<p>Triggers one or more of a fixed number of performance monitor events, with event index or mask\nspecified by immediate operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\n<p>PTX ISA version 3.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-pmevent\" target=\"_blank\" rel=\"noopener noreferrer\">pmevent <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0\" target=\"_blank\" rel=\"noopener noreferrer\">pmevent.mask <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Trigger one or more Performance Monitor events.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-pmevent"
            };

        case "popc":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">popc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "pos":
            return {
                "html": "<p>PTX 2.3 adds support for texture arrays. The texture array feature supports access to an array of 1D\nor 2D textures, where an integer indexes into the array of textures, and then one or two\nsingle-precision floating point coordinates are used to address within the selected 1D or 2D\ntexture.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-3\" target=\"_blank\" rel=\"noopener noreferrer\">pos <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX 2.3 adds support for texture arrays. The texture array feature supports access to an array of 1D\n\nor 2D textures, where an integer indexes into the array of textures, and then one or two\n\nsingle-pre...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-3"
            };

        case "prefetch":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">prefetch <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "prefetching":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">prefetching <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "prefetchu":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">prefetchu <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "prmt":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">prmt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "This section describes the floating-point changes in PTX ISA version 2.0 forsm_20targets. The\n\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\n\nwith leg...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "ptr":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">alloca</span></code> instruction dynamically allocates memory on the stack frame of the current function\nand updates the stack pointer accordingly. The returned pointer <code class=\"docutils literal notranslate\"><span class=\"pre\">ptr</span></code> points to local memory and\ncan be used in the address operand of <code class=\"docutils literal notranslate\"><span class=\"pre\">ld.local</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">st.local</span></code> instructions.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#stack-manipulation-instructions-alloca\" target=\"_blank\" rel=\"noopener noreferrer\">ptr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Dynamically allocate memory on stack.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#stack-manipulation-instructions-alloca"
            };

        case "ptxas":
            return {
                "html": "<p>Pass module-scoped, entry-scoped, or statement-level directives to the PTX backend compiler.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#performance-tuning-directives-pragma\" target=\"_blank\" rel=\"noopener noreferrer\">ptxas <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Pass directives to PTX backend compiler.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#performance-tuning-directives-pragma"
            };

        case "py":
            return {
                "html": "<p>In PTX, functions are declared and defined using the <code class=\"docutils literal notranslate\"><span class=\"pre\">.func</span></code> directive. A function <em>declaration</em>\nspecifies an optional list of return parameters, the function name, and an optional list of input\nparameters; together these specify the function\u2019s interface, or prototype. A function <em>definition</em>\nspecifies both the interface and the body of the function. A function must be declared or defined\nprior to being called.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#function-declarations-and-definitions\" target=\"_blank\" rel=\"noopener noreferrer\">py <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "In PTX, functions are declared and defined using the.funcdirective. A functiondeclarationspecifies an optional list of return parameters, the function name, and an optional list of input\n\nparameters; t...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#function-declarations-and-definitions"
            };

        case "q":
            return {
                "html": "<p>Compute bitwise logical operation on inputs <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> and store the result in destination\n<code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-lop3\" target=\"_blank\" rel=\"noopener noreferrer\">q <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Arbitrary logical operation on 3 inputs.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-lop3"
            };

        case "r":
            return {
                "html": "<p>PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\nspace the parameter points, and for optionally specifying the alignment of the memory to which the\nparameter points.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2\" target=\"_blank\" rel=\"noopener noreferrer\">r <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX 2.2 adds a new directive for specifying kernel parameter attributes; specifically, there is a\n\nnew directives for specifying that a kernel parameter is a pointer, for specifying to which state\n\nspac...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-2"
            };

        case "rbits":
            return {
                "html": "<p>Convert between different types and sizes.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt\" target=\"_blank\" rel=\"noopener noreferrer\">rbits <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Convert a value from one type to another.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvt"
            };

        case "rcp":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Compute <code class=\"docutils literal notranslate\"><span class=\"pre\">1/a</span></code>, store result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\n<p>The underlying, stack-based ABI is supported in PTX ISA version 2.1 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_2x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">rcp <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.approx.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.approx.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-1\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.approx.ftz.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.rn.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rcp\" target=\"_blank\" rel=\"noopener noreferrer\">rcp.rnd.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Take the reciprocal of a value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "red":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Performs a reduction operation with operand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> and the value in location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, and stores the\nresult of the specified operation at location <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, overwriting the original value. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>\nspecifies a location in the specified state space. If no state space is given, perform the memory\naccesses using <a class=\"reference internal\" href=\"#generic-addressing\"><span class=\"std std-ref\">Generic Addressing</span></a>. <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> with scalar type may\nbe used only with <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> spaces and with generic addressing, where the address\npoints to <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.shared</span></code> space. <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> with vector type may be used only with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> space and with generic addressing where the address points to <code class=\"docutils literal notranslate\"><span class=\"pre\">.global</span></code> space.</p>\n<p>PTX ISA version 8.1 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">red <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.bf16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.bf16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.f16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.f16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.noftz.bf16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.noftz.bf16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.noftz.f16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.add.noftz.f16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-1\" target=\"_blank\" rel=\"noopener noreferrer\">red.async <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.f16x2 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.global <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.global.add.u64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.shared <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-red\" target=\"_blank\" rel=\"noopener noreferrer\">red.shared.add.u64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Reduction operations on global and shared memory.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "redux":
            return {
                "html": "<p>PTX ISA version 7.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0\" target=\"_blank\" rel=\"noopener noreferrer\">redux.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0"
            };

        case "reg":
            return {
                "html": "<p>All the memory instructions take an address operand that specifies the memory location being\naccessed. This addressable operand is one of:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#addresses-as-operands\" target=\"_blank\" rel=\"noopener noreferrer\">reg <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "All the memory instructions take an address operand that specifies the memory location being\n\naccessed. This addressable operand is one of:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#addresses-as-operands"
            };

        case "release":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">release <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "rem":
            return {
                "html": "<p>Divides <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> by <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>, store the remainder in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-rem\" target=\"_blank\" rel=\"noopener noreferrer\">rem(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The remainder of integer division.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-rem"
            };

        case "ret":
            return {
                "html": "<p>Return execution to caller\u2019s environment. A divergent return suspends threads until all threads are\nready to return to the caller. This allows multiple divergent <code class=\"docutils literal notranslate\"><span class=\"pre\">ret</span></code> instructions.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-ret\" target=\"_blank\" rel=\"noopener noreferrer\">ret <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Return from function to instruction after call.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-ret"
            };

        case "rsqrt":
            return {
                "html": "<p>Compute <code class=\"docutils literal notranslate\"><span class=\"pre\">1/sqrt(a)</span></code> and store the result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\n<p>PTX ISA version 4.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.approx(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.approx.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.approx.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-0\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.approx.ftz.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt\" target=\"_blank\" rel=\"noopener noreferrer\">rsqrt.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Take the reciprocal of the square root of a value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-rsqrt"
            };

        case "s":
            return {
                "html": "<p>Each matrix can be stored in memory with a <em>row-major</em> or <em>column-major</em> layout. In a <em>row-major</em>\nformat, consecutive elements of each row are stored in contiguous memory locations, and the row is\ncalled the <em>leading dimension</em> of the matrix. In a <em>column-major</em> format, consecutive elements of\neach column are stored in contiguous memory locations and the column is called the <em>leading\ndimension</em> of the matrix.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-storage\" target=\"_blank\" rel=\"noopener noreferrer\">s <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Each matrix can be stored in memory with arow-majororcolumn-majorlayout. In arow-majorformat, consecutive elements of each row are stored in contiguous memory locations, and the row is\n\ncalled theleadi...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-storage"
            };

        case "sad":
            return {
                "html": "<p>Adds the absolute value of <code class=\"docutils literal notranslate\"><span class=\"pre\">a-b</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> and writes the resulting value into <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-sad\" target=\"_blank\" rel=\"noopener noreferrer\">sad(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Sum of absolute differences.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-sad"
            };

        case "scope":
            return {
                "html": "<p>PTX ISA version 5.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-5-0\" target=\"_blank\" rel=\"noopener noreferrer\">scope <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 5.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-5-0"
            };

        case "selp":
            return {
                "html": "<p>Conditional selection. If <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> is stored in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> otherwise. Operands\n<code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> must be of the same type. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> is a predicate.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-selp\" target=\"_blank\" rel=\"noopener noreferrer\">selp <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-selp\" target=\"_blank\" rel=\"noopener noreferrer\">selp.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Select between source operands, based on the value of the predicate source operand.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-selp"
            };

        case "set":
            return {
                "html": "<p>PTX ISA version 6.5 introduces the following new features:</p>\n<p>Compares two numeric values and optionally combines the result with another predicate value by\napplying a Boolean operator. If this result is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">1.0f</span></code> is written for floating-point\ndestination types, and <code class=\"docutils literal notranslate\"><span class=\"pre\">0xffffffff</span></code> is written for integer destination types. Otherwise,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">0x00000000</span></code> is written.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5\" target=\"_blank\" rel=\"noopener noreferrer\">set <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-set\" target=\"_blank\" rel=\"noopener noreferrer\">set.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-set\" target=\"_blank\" rel=\"noopener noreferrer\">set.dtype.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-set\" target=\"_blank\" rel=\"noopener noreferrer\">set.ftz.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.5 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-5"
            };

        case "setmaxnreg":
            return {
                "html": "<p>PTX ISA version 8.0 introduces the following new features:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">setmaxnreg</span></code> provides a hint to the system to update the maximum number of per-thread registers\nowned by the executing warp to the value specified by the <code class=\"docutils literal notranslate\"><span class=\"pre\">imm-reg-count</span></code> operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-0\" target=\"_blank\" rel=\"noopener noreferrer\">setmaxnreg <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-setmaxnreg\" target=\"_blank\" rel=\"noopener noreferrer\">setmaxnreg.inc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Hint to change the number of registers owned by the warp.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-0"
            };

        case "setp":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\n<p>Compares two values and combines the result with another predicate value by applying a Boolean\noperator. This result is written to the first destination operand. A related value computed using\nthe complement of the compare result is written to the second destination operand.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">setp <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">setp.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">setp.dtype.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-setp\" target=\"_blank\" rel=\"noopener noreferrer\">setp.ftz.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.8 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "shared":
            return {
                "html": "<p>Convert a <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>, <a class=\"reference internal\" href=\"#kernel-function-parameters\"><span class=\"std std-ref\">Kernel Function Parameters</span></a>\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">.param</span></code>), <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">local</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">shared</span></code> address to a generic address, or vice-versa. The\nsource and destination addresses must be the same size. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u32.u64</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">cvt.u64.u32</span></code> to\ntruncate or zero-extend addresses.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta\" target=\"_blank\" rel=\"noopener noreferrer\">shared <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Introduced in PTX ISA version 2.0.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-cvta"
            };

        case "shf":
            return {
                "html": "<p>PTX ISA version 3.1 introduces the following new features:</p>\n<p>Shift the 64-bit value formed by concatenating operands <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> left or right by the amount\nspecified by the unsigned 32-bit value in <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code>. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> holds bits <code class=\"docutils literal notranslate\"><span class=\"pre\">63:32</span></code> and operand a\nholds bits <code class=\"docutils literal notranslate\"><span class=\"pre\">31:0</span></code> of the 64-bit source value. The source is shifted left or right by the clamped\nor wrapped value in <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code>. For <code class=\"docutils literal notranslate\"><span class=\"pre\">shf.l</span></code>, the most-significant 32-bits of the result are written\ninto <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>; for <code class=\"docutils literal notranslate\"><span class=\"pre\">shf.r</span></code>, the least-significant 32-bits of the result are written into <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-1\" target=\"_blank\" rel=\"noopener noreferrer\">shf <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-shf\" target=\"_blank\" rel=\"noopener noreferrer\">shf.l <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-shf\" target=\"_blank\" rel=\"noopener noreferrer\">shf.r <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Funnel shift.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-1"
            };

        case "shfl":
            return {
                "html": "<p>PTX ISA version 3.0 introduces the following new features:</p>\n<p>Exchange register data between threads of a warp.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0\" target=\"_blank\" rel=\"noopener noreferrer\">shfl <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-shfl-sync\" target=\"_blank\" rel=\"noopener noreferrer\">shfl.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Register data shuffle within threads of a warp.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0"
            };

        case "shl":
            return {
                "html": "<p>Shift <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> right by the amount specified by unsigned 32-bit value in <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>. Signed shifts fill with\nthe sign bit, unsigned and untyped shifts fill with <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-shr\" target=\"_blank\" rel=\"noopener noreferrer\">shl <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Shift bits right, sign or zero-fill on left.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-shr"
            };

        case "shr":
            return {
                "html": "<p>Shift <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> right by the amount specified by unsigned 32-bit value in <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>. Signed shifts fill with\nthe sign bit, unsigned and untyped shifts fill with <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-shr\" target=\"_blank\" rel=\"noopener noreferrer\">shr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Shift bits right, sign or zero-fill on left.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-shr"
            };

        case "sin":
            return {
                "html": "<p>Find the sine of the angle <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> (in radians).</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sin\" target=\"_blank\" rel=\"noopener noreferrer\">sin(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sin\" target=\"_blank\" rel=\"noopener noreferrer\">sin.approx.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sin\" target=\"_blank\" rel=\"noopener noreferrer\">sin.approx.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sin\" target=\"_blank\" rel=\"noopener noreferrer\">sin.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sin\" target=\"_blank\" rel=\"noopener noreferrer\">sin.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Find the sine of a value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sin"
            };

        case "size":
            return {
                "html": "<p>PTX ISA version 9.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-9-0\" target=\"_blank\" rel=\"noopener noreferrer\">size <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 9.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-9-0"
            };

        case "slct":
            return {
                "html": "<p>Conditional selection. If <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> &gt;= 0, <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> is stored in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>, otherwise <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> is stored in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. Operands <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> are treated as a bitsize type of the same width as the first\ninstruction type; operand <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> must match the second instruction type (<code class=\"docutils literal notranslate\"><span class=\"pre\">.s32</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.f32</span></code>). The\nselected input is copied to the output without modification.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-slct\" target=\"_blank\" rel=\"noopener noreferrer\">slct <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-slct\" target=\"_blank\" rel=\"noopener noreferrer\">slct.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-slct\" target=\"_blank\" rel=\"noopener noreferrer\">slct.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-slct\" target=\"_blank\" rel=\"noopener noreferrer\">slct.ftz.dtype.f32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Select one source operand, based on the sign of the third operand.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#comparison-and-selection-instructions-slct"
            };

        case "sqrt":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p>Compute sqrt(<code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>) and store the result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.approx.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.approx.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.rn.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sqrt\" target=\"_blank\" rel=\"noopener noreferrer\">sqrt.rnd.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Take the square root of a value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "src":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">tensormap.cp_fenceproxy</span></code> instructions perform the following operations in order :</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-tensormap-cp-fenceproxy\" target=\"_blank\" rel=\"noopener noreferrer\">src <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "A fused copy and fence operation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-tensormap-cp-fenceproxy"
            };

        case "st":
            return {
                "html": "<p>Store the value of operand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> in the location specified by the destination address\noperand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> in specified state space. If no state space is given, perform the store using\n<a class=\"reference internal\" href=\"#generic-addressing\"><span class=\"std std-ref\">Generic Addressing</span></a>. Stores to const memory are illegal.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">alloca</span></code> instruction dynamically allocates memory on the stack frame of the current function\nand updates the stack pointer accordingly. The returned pointer <code class=\"docutils literal notranslate\"><span class=\"pre\">ptr</span></code> points to local memory and\ncan be used in the address operand of <code class=\"docutils literal notranslate\"><span class=\"pre\">ld.local</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">st.local</span></code> instructions.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.b16 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.b32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.f64 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#stack-manipulation-instructions-alloca\" target=\"_blank\" rel=\"noopener noreferrer\">st.local <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.mmio <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.relaxed <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.release <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st\" target=\"_blank\" rel=\"noopener noreferrer\">st.volatile <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Dynamically allocate memory on stack.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#data-movement-and-conversion-instructions-st"
            };

        case "stackrestore":
            return {
                "html": "<p>PTX ISA version 7.3 introduces the following new features:</p>\n<p>Sets the current stack pointer to source register <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-3\" target=\"_blank\" rel=\"noopener noreferrer\">stackrestore <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#stack-manipulation-instructions-stackrestore\" target=\"_blank\" rel=\"noopener noreferrer\">stackrestore.typea <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Update the stack pointer with a new value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-3"
            };

        case "stacksave":
            return {
                "html": "<p>PTX ISA version 7.3 introduces the following new features:</p>\n<p>Sets the current stack pointer to source register <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-3\" target=\"_blank\" rel=\"noopener noreferrer\">stacksave <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#stack-manipulation-instructions-stackrestore\" target=\"_blank\" rel=\"noopener noreferrer\">stacksave.typea <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Update the stack pointer with a new value.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-3"
            };

        case "state":
            return {
                "html": "<p>The pending count can be queried from the opaque mbarrier state using <code class=\"docutils literal notranslate\"><span class=\"pre\">mbarrier.pending_count</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-pending-count\" target=\"_blank\" rel=\"noopener noreferrer\">state <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Query the pending arrival count from the opaque mbarrier state.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-mbarrier-pending-count"
            };

        case "stmatrix":
            return {
                "html": "<p>PTX ISA version 7.8 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8\" target=\"_blank\" rel=\"noopener noreferrer\">stmatrix <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.8 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-8"
            };

        case "stride":
            return {
                "html": "<p>Collectively store a matrix across all threads in a warp at the location indicated by address\noperand <code class=\"docutils literal notranslate\"><span class=\"pre\">p</span></code> in the specified state space from source register <code class=\"docutils literal notranslate\"><span class=\"pre\">r</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-wmma-st\" target=\"_blank\" rel=\"noopener noreferrer\">stride <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The required alignment for addresspandstrideis described in theMatrix Storage for WMMA.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-wmma-st"
            };

        case "sub":
            return {
                "html": "<p>Performs subtraction and writes the resulting value into a destination register.</p>\n<p>Performs integer subtraction and writes the borrow-out value into the condition code register.</p>\n<p>Converts input operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> from <code class=\"docutils literal notranslate\"><span class=\"pre\">.atype</span></code> into <code class=\"docutils literal notranslate\"><span class=\"pre\">.f32</span></code> type. The converted value is then\nused for the subtraction. The resulting value is stored in the destination operand <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub(int) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#extended-precision-arithmetic-instructions-sub-cc\" target=\"_blank\" rel=\"noopener noreferrer\">sub.cc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.f64(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.ftz.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.ftz.f32x2(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#mixed-precision-floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.sat <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-sub\" target=\"_blank\" rel=\"noopener noreferrer\">sub.sat.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Subtract one value from another.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#integer-arithmetic-instructions-sub"
            };

        case "subc":
            return {
                "html": "<p>Performs integer subtraction with borrow-in and optionally writes the borrow-out value into the\ncondition code register.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#extended-precision-arithmetic-instructions-subc\" target=\"_blank\" rel=\"noopener noreferrer\">subc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Subtract one value from another, with borrow-in and optional borrow-out.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#extended-precision-arithmetic-instructions-subc"
            };

        case "suld":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">suld.b.{1d,2d,3d}</span></code></p>\n<p>PTX ISA version 3.0 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">suld <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-suld\" target=\"_blank\" rel=\"noopener noreferrer\">suld.3d <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-suld\" target=\"_blank\" rel=\"noopener noreferrer\">suld.b <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-suld\" target=\"_blank\" rel=\"noopener noreferrer\">suld.b.3d <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-suld\" target=\"_blank\" rel=\"noopener noreferrer\">suld.b.trap <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-3-0\" target=\"_blank\" rel=\"noopener noreferrer\">suld.p <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Load from surface memory.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "suq":
            return {
                "html": "<p>The underlying, stack-based ABI is supported in PTX ISA version 2.1 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_2x</span></code> targets.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-1\" target=\"_blank\" rel=\"noopener noreferrer\">suq <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "The underlying, stack-based ABI is supported in PTX ISA version 2.1 forsm_2xtargets.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-1"
            };

        case "sured":
            return {
                "html": "<p>PTX ISA version 8.1 introduces the following new features:</p>\n<p>Reduction to surface memory using a surface coordinate vector. The instruction performs a reduction\noperation with data from operand <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> to the surface named by operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> at coordinates given by\noperand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> is a <code class=\"docutils literal notranslate\"><span class=\"pre\">.surfref</span></code> variable or <code class=\"docutils literal notranslate\"><span class=\"pre\">.u64</span></code> register. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> is a\nscalar or singleton tuple for 1d surfaces; is a two-element vector for 2d surfaces; and is a\nfour-element vector for 3d surfaces, where the fourth element is ignored. Coordinate elements are of\ntype <code class=\"docutils literal notranslate\"><span class=\"pre\">.s32</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-1\" target=\"_blank\" rel=\"noopener noreferrer\">sured <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sured\" target=\"_blank\" rel=\"noopener noreferrer\">sured.b <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sured\" target=\"_blank\" rel=\"noopener noreferrer\">sured.p <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Reduce surface memory.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-1"
            };

        case "sust":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">sust.{1d,2d,3d}</span></code></p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">sust <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sust\" target=\"_blank\" rel=\"noopener noreferrer\">sust.3d <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sust\" target=\"_blank\" rel=\"noopener noreferrer\">sust.b <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sust\" target=\"_blank\" rel=\"noopener noreferrer\">sust.b.3d <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sust\" target=\"_blank\" rel=\"noopener noreferrer\">sust.b.trap <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#surface-instructions-sust\" target=\"_blank\" rel=\"noopener noreferrer\">sust.p <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Store to surface memory.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "sys":
            return {
                "html": "<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction guarantees that prior memory accesses requested by this thread (<code class=\"docutils literal notranslate\"><span class=\"pre\">ld</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">st</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">atom</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">red</span></code> instructions) are performed at the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>, before later\nmemory operations requested by this thread following the <code class=\"docutils literal notranslate\"><span class=\"pre\">membar</span></code> instruction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">level</span></code>\nqualifier specifies the set of threads that may observe the ordering effect of this operation.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar\" target=\"_blank\" rel=\"noopener noreferrer\">sys <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Enforce an ordering of memory operations.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-membar"
            };

        case "szext":
            return {
                "html": "<p>PTX ISA version 7.6 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-6\" target=\"_blank\" rel=\"noopener noreferrer\">szext <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 7.6 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-6"
            };

        case "t":
            return {
                "html": "<p>Suspends the thread for a sleep duration approximately close to the delay <code class=\"docutils literal notranslate\"><span class=\"pre\">t</span></code>, specified in\nnanoseconds. <code class=\"docutils literal notranslate\"><span class=\"pre\">t</span></code> may be a register or an immediate value.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-nanosleep\" target=\"_blank\" rel=\"noopener noreferrer\">t <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Suspend the thread for an approximate delay given in nanoseconds.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-nanosleep"
            };

        case "taddr":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">tcgen05.shift</span></code> is an asynchronous instruction which initiates the shifting of 32-byte\nelements downwards across all the rows, except the last, by one row. The address operand <code class=\"docutils literal notranslate\"><span class=\"pre\">taddr</span></code>\nspecifies the base address of the matrix in the <a class=\"reference internal\" href=\"#tensor-memory\"><span class=\"std std-ref\">Tensor Memory</span></a> whose rows must\nbe down shifted.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-instructions-tcgen05-shift\" target=\"_blank\" rel=\"noopener noreferrer\">taddr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Asynchronously shift down the rows of the matrix in theTensor Memoryfor a warp.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-instructions-tcgen05-shift"
            };

        case "tanh":
            return {
                "html": "<p>PTX ISA version 7.0 introduces the following new features:</p>\n<p>Take hyperbolic tangent value of <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0\" target=\"_blank\" rel=\"noopener noreferrer\">tanh <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-tanh\" target=\"_blank\" rel=\"noopener noreferrer\">tanh.approx.f32(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Take hyperbolic tangent value ofa.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-7-0"
            };

        case "tensormap":
            return {
                "html": "<p>PTX ISA version 8.3 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-3\" target=\"_blank\" rel=\"noopener noreferrer\">tensormap.replace <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 8.3 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-3"
            };

        case "testp":
            return {
                "html": "<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">testp</span></code> tests common properties of floating-point numbers and returns a predicate value of <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>\nif <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">testp <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-testp\" target=\"_blank\" rel=\"noopener noreferrer\">testp.finite(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-testp\" target=\"_blank\" rel=\"noopener noreferrer\">testp.infinite(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-testp\" target=\"_blank\" rel=\"noopener noreferrer\">testp.normal(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-testp\" target=\"_blank\" rel=\"noopener noreferrer\">testp.notanumber(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-testp\" target=\"_blank\" rel=\"noopener noreferrer\">testp.number(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-testp\" target=\"_blank\" rel=\"noopener noreferrer\">testp.subnormal(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Test floating-point property.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0"
            };

        case "tex":
            return {
                "html": "<p>PTX ISA version 4.3 introduces the following new features:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">tex.{1d,2d,3d}</span></code></p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3\" target=\"_blank\" rel=\"noopener noreferrer\">tex <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-tex\" target=\"_blank\" rel=\"noopener noreferrer\">tex.2dms <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-tex\" target=\"_blank\" rel=\"noopener noreferrer\">tex.a2dms <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-tex\" target=\"_blank\" rel=\"noopener noreferrer\">tex.acube <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-tex\" target=\"_blank\" rel=\"noopener noreferrer\">tex.cube <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3\" target=\"_blank\" rel=\"noopener noreferrer\">tex.grad <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Perform a texture memory lookup.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-3"
            };

        case "tid":
            return {
                "html": "<p>The <em>Parallel Thread Execution (PTX)</em> programming model is explicitly parallel: a PTX program\nspecifies the execution of a given thread of a parallel thread array. A <em>cooperative thread array</em>,\nor CTA, is an array of threads that execute a kernel concurrently or in parallel.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">tid <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">tid.x <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">tid.y <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays\" target=\"_blank\" rel=\"noopener noreferrer\">tid.z <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "TheParallel Thread Execution (PTX)programming model is explicitly parallel: a PTX program\n\nspecifies the execution of a given thread of a parallel thread array. Acooperative thread array,\n\nor CTA, is an...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#cooperative-thread-arrays"
            };

        case "timestamp":
            return {
                "html": "<p>Associates a source filename with an integer index. <code class=\"docutils literal notranslate\"><span class=\"pre\">.loc</span></code> directives reference source files by\nindex.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#debugging-directives-file\" target=\"_blank\" rel=\"noopener noreferrer\">timestamp <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Source file name.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#debugging-directives-file"
            };

        case "tlist":
            return {
                "html": "<p>Index into a list of possible destination labels, and continue execution from the chosen\nlabel. Conditional branches are specified by using a guard predicate.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-brx-idx\" target=\"_blank\" rel=\"noopener noreferrer\">tlist <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Branch to a label indexed from a list of potential branch targets.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#control-flow-instructions-brx-idx"
            };

        case "transpose":
            return {
                "html": "<p>If the bit <code class=\"docutils literal notranslate\"><span class=\"pre\">Transpose</span> <span class=\"pre\">A</span> <span class=\"pre\">Matrix</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">Transpose</span> <span class=\"pre\">B</span> <span class=\"pre\">Matrix</span></code> in the\n<a class=\"reference internal\" href=\"#tcgen05-instruction-descriptor\"><span class=\"std std-ref\">Instruction descriptor</span></a> is 0, then <em>K-major</em> is\nused for matrix <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code> / <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code> respectively. If the bit <code class=\"docutils literal notranslate\"><span class=\"pre\">Transpose</span> <span class=\"pre\">A</span> <span class=\"pre\">Matrix</span></code> in the\n<a class=\"reference internal\" href=\"#tcgen05-instruction-descriptor\"><span class=\"std std-ref\">Instruction descriptor</span></a> is 1 then <em>M-major</em> is\nused for matrix <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code>. If the bit <code class=\"docutils literal notranslate\"><span class=\"pre\">Transpose</span> <span class=\"pre\">B</span> <span class=\"pre\">Matrix</span></code> in the\n<a class=\"reference internal\" href=\"#tcgen05-instruction-descriptor\"><span class=\"std std-ref\">Instruction descriptor</span></a> is 1, then <em>N-major</em> is\nused for matrix <code class=\"docutils literal notranslate\"><span class=\"pre\">B</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-shared-memory-layout-swizzling\" target=\"_blank\" rel=\"noopener noreferrer\">transpose <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "If the bitTransposeAMatrix/TransposeBMatrixin theInstruction descriptoris 0, thenK-majoris\n\nused for matrixA/Brespectively. If the bitTransposeAMatrixin theInstruction descriptoris 1 thenM-majoris\n\nused...",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#tcgen05-shared-memory-layout-swizzling"
            };

        case "trap":
            return {
                "html": "<p>Abort execution and generate an interrupt to the host CPU.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-trap\" target=\"_blank\" rel=\"noopener noreferrer\">trap <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Perform trap operation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#miscellaneous-instructions-trap"
            };

        case "true":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.query_cancel</span></code> can be used to decode opaque response\nwritten by instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">true <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Queries response ofclusterlaunchcontrol.try_canceloperation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel"
            };

        case "txq":
            return {
                "html": "<p>The underlying, stack-based ABI is supported in PTX ISA version 2.1 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_2x</span></code> targets.</p>\n<p>Query an attribute of a texture or sampler. Operand <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> is either a <code class=\"docutils literal notranslate\"><span class=\"pre\">.texref</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">.samplerref</span></code> variable, or a <code class=\"docutils literal notranslate\"><span class=\"pre\">.u64</span></code> register.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-1\" target=\"_blank\" rel=\"noopener noreferrer\">txq <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#texture-instructions-txq\" target=\"_blank\" rel=\"noopener noreferrer\">txq.level <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Query texture and sampler attributes.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-1"
            };

        case "ulp":
            return {
                "html": "<p>Divides <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> by <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>, stores result in <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div\" target=\"_blank\" rel=\"noopener noreferrer\">ulp(fp) <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Divide one value by another.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#floating-point-instructions-div"
            };

        case "vabsdiff":
            return {
                "html": "<p>Perform scalar arithmetic operation with optional saturate, and optional secondary arithmetic operation or subword data merge.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax\" target=\"_blank\" rel=\"noopener noreferrer\">vabsdiff <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word addition/subtraction.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax"
            };

        case "vadd":
            return {
                "html": "<p>Perform scalar arithmetic operation with optional saturate, and optional secondary arithmetic operation or subword data merge.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax\" target=\"_blank\" rel=\"noopener noreferrer\">vadd <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word addition/subtraction.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax"
            };

        case "var":
            return {
                "html": "<p>All the memory instructions take an address operand that specifies the memory location being\naccessed. This addressable operand is one of:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#addresses-as-operands\" target=\"_blank\" rel=\"noopener noreferrer\">var <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "All the memory instructions take an address operand that specifies the memory location being\n\naccessed. This addressable operand is one of:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#addresses-as-operands"
            };

        case "vmad":
            return {
                "html": "<p>Calculate <code class=\"docutils literal notranslate\"><span class=\"pre\">(a*b)</span> <span class=\"pre\">+</span> <span class=\"pre\">c</span></code>, with optional operand negates, <em>plus one</em> mode, and scaling.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vmad\" target=\"_blank\" rel=\"noopener noreferrer\">vmad <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word multiply-accumulate.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vmad"
            };

        case "vmax":
            return {
                "html": "<p>Perform scalar arithmetic operation with optional saturate, and optional secondary arithmetic operation or subword data merge.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax\" target=\"_blank\" rel=\"noopener noreferrer\">vmax <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word addition/subtraction.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax"
            };

        case "vmin":
            return {
                "html": "<p>Perform scalar arithmetic operation with optional saturate, and optional secondary arithmetic operation or subword data merge.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax\" target=\"_blank\" rel=\"noopener noreferrer\">vmin <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word addition/subtraction.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax"
            };

        case "vote":
            return {
                "html": "<p>PTX ISA version 4.0 introduces the following new features:</p>\n<p>This section describes the floating-point changes in PTX ISA version 2.0 for <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_20</span></code> targets. The\ngoal is to achieve IEEE 754 compliance wherever possible, while maximizing backward compatibility\nwith legacy PTX ISA version 1.x code and <code class=\"docutils literal notranslate\"><span class=\"pre\">sm_1x</span></code> targets.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">vote.sync</span></code> will cause executing thread to wait until all non-exited threads corresponding to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">membermask</span></code> have executed <code class=\"docutils literal notranslate\"><span class=\"pre\">vote.sync</span></code> with the same qualifiers and same <code class=\"docutils literal notranslate\"><span class=\"pre\">membermask</span></code> value\nbefore resuming execution.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-0\" target=\"_blank\" rel=\"noopener noreferrer\">vote <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-2-0\" target=\"_blank\" rel=\"noopener noreferrer\">vote.ballot.b32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-vote-sync\" target=\"_blank\" rel=\"noopener noreferrer\">vote.sync <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-vote-sync\" target=\"_blank\" rel=\"noopener noreferrer\">vote.sync.ballot.b32 <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Vote across thread group.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-4-0"
            };

        case "vset":
            return {
                "html": "<p>Compare input values using specified comparison, with optional secondary arithmetic operation or\nsubword data merge.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vset\" target=\"_blank\" rel=\"noopener noreferrer\">vset <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word comparison.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vset"
            };

        case "vshl":
            return {
                "html": "<p class=\"rubric\">Semantics</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vshl-vshr\" target=\"_blank\" rel=\"noopener noreferrer\">vshl <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word left/right shift.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vshl-vshr"
            };

        case "vshr":
            return {
                "html": "<p class=\"rubric\">Semantics</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vshl-vshr\" target=\"_blank\" rel=\"noopener noreferrer\">vshr <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word left/right shift.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vshl-vshr"
            };

        case "vsub":
            return {
                "html": "<p>Perform scalar arithmetic operation with optional saturate, and optional secondary arithmetic operation or subword data merge.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax\" target=\"_blank\" rel=\"noopener noreferrer\">vsub <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Integer byte/half-word/word addition/subtraction.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#scalar-video-instructions-vadd-vsub-vabsdiff-vmin-vmax"
            };

        case "wgmma":
            return {
                "html": "<p>PTX ISA version 8.0 introduces the following new features:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">wgmma.fence</span></code> instruction establishes an ordering between prior accesses to any warpgroup\nregisters and subsequent accesses to the same registers by a <code class=\"docutils literal notranslate\"><span class=\"pre\">wgmma.mma_async</span></code> instruction. Only\nthe accumulator register and the input registers containing the fragments of matrix A require this\nordering.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-0\" target=\"_blank\" rel=\"noopener noreferrer\">wgmma <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#asynchronous-warpgroup-level-matrix-instructions-wgmma-fence\" target=\"_blank\" rel=\"noopener noreferrer\">wgmma.fence <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 8.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-8-0"
            };

        case "wmma":
            return {
                "html": "<p>PTX ISA version 6.0 introduces the following new features:</p>\n<p>Perform a warp-level matrix multiply-and-accumulate computation <code class=\"docutils literal notranslate\"><span class=\"pre\">D</span> <span class=\"pre\">=</span> <span class=\"pre\">A</span> <span class=\"pre\">*</span> <span class=\"pre\">B</span> <span class=\"pre\">+</span> <span class=\"pre\">C</span></code> using matrices A,\nB and C loaded in registers <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> respectively, and store the result matrix in\nregister <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code>. The register arguments <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">c</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">d</span></code> hold unspecified fragments of\nthe corresponding matrices as described in <a class=\"reference internal\" href=\"#warp-level-matrix-fragment\"><span class=\"std std-ref\">Matrix Fragments for WMMA</span></a></p>\n<p>PTX ISA version 6.3 introduces the following new features:</p>\n<p>PTX ISA version 6.4 introduces the following new features:</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0\" target=\"_blank\" rel=\"noopener noreferrer\">wmma <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-wmma-mma\" target=\"_blank\" rel=\"noopener noreferrer\">wmma.and.popc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-3\" target=\"_blank\" rel=\"noopener noreferrer\">wmma.load <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-4\" target=\"_blank\" rel=\"noopener noreferrer\">wmma.mma <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-3\" target=\"_blank\" rel=\"noopener noreferrer\">wmma.store <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>, <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-instructions-wmma-mma\" target=\"_blank\" rel=\"noopener noreferrer\">wmma.xor.popc <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "PTX ISA version 6.0 introduces the following new features:",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#changes-in-ptx-isa-version-6-0"
            };

        case "x":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.query_cancel</span></code> can be used to decode opaque response\nwritten by instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">x <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Queries response ofclusterlaunchcontrol.try_canceloperation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel"
            };

        case "xor":
            return {
                "html": "<p>Compute the bit-wise exclusive-or operation for the bits in <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">b</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-xor\" target=\"_blank\" rel=\"noopener noreferrer\">xor <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Bitwise exclusive-OR (inequality).",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#logic-and-shift-instructions-xor"
            };

        case "y":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.query_cancel</span></code> can be used to decode opaque response\nwritten by instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">y <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Queries response ofclusterlaunchcontrol.try_canceloperation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel"
            };

        case "z":
            return {
                "html": "<p>Instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.query_cancel</span></code> can be used to decode opaque response\nwritten by instruction <code class=\"docutils literal notranslate\"><span class=\"pre\">clusterlaunchcontrol.try_cancel</span></code>.</p>\nFor more information, visit <a href=\"https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel\" target=\"_blank\" rel=\"noopener noreferrer\">z <sup><small class=\"fas fa-external-link-alt opens-new-window\" title=\"Opens in a new window\"></small></sup></a>.",
                "tooltip": "Queries response ofclusterlaunchcontrol.try_canceloperation.",
                "url": "https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#parallel-synchronization-and-communication-instructions-clusterlaunchcontrol-query-cancel"
            };


        }
    }
    